; THIS FILE IS GENERATED AUTOMATICALLY
(env
 (_
  (flags
   (:standard -rectypes -w -27-33-39))))

(executable
 (name hm_inferencer_run)
 (package noCanren-tests)
 (public_name noCanren-tests.hm_inferencer)
 (libraries GT OCanren OCanren.tester)
 (modules hm_inferencer hm_inferencer_run)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets hm_inferencer.ml)
 (deps hm_inferencer.ml2mk.ml)
 (action
  (run sh -c "%{project_root}/src/noCanren.exe %{deps} -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(executable
 (name scheme_interpreter_run)
 (package noCanren-tests)
 (public_name noCanren-tests.scheme_interpreter)
 (libraries GT OCanren OCanren.tester)
 (modules scheme_interpreter scheme_interpreter_run)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets scheme_interpreter.ml)
 (deps scheme_interpreter.ml2mk.ml)
 (action
  (run sh -c "%{project_root}/src/noCanren.exe %{deps} -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(executable
 (name bottles_run)
 (package noCanren-tests)
 (public_name noCanren-tests.bottles)
 (libraries GT OCanren OCanren.tester)
 (modules bottles bottles_run)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets bottles.ml)
 (deps bottles.ml2mk.ml)
 (action
  (run sh -c "%{project_root}/src/noCanren.exe %{deps} -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(executable
 (name hanoi_run)
 (package noCanren-tests)
 (public_name noCanren-tests.hanoi)
 (libraries GT OCanren OCanren.tester)
 (modules hanoi hanoi_run)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets hanoi.ml)
 (deps hanoi.ml2mk.ml)
 (action
  (run sh -c "%{project_root}/src/noCanren.exe %{deps} -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(executable
 (name bridge_run)
 (package noCanren-tests)
 (public_name noCanren-tests.bridge)
 (libraries GT OCanren OCanren.tester)
 (modules bridge bridge_run)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets bridge.ml)
 (deps bridge.ml2mk.ml)
 (action
  (run sh -c "%{project_root}/src/noCanren.exe %{deps} -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(executable
 (name einstein_run)
 (package noCanren-tests)
 (public_name noCanren-tests.einstein)
 (libraries GT OCanren OCanren.tester)
 (modules einstein einstein_run)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets einstein.ml)
 (deps einstein.ml2mk.ml)
 (action
  (run sh -c "%{project_root}/src/noCanren.exe %{deps} -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(executable
 (name unify_run)
 (package noCanren-tests)
 (public_name noCanren-tests.unify)
 (libraries GT OCanren OCanren.tester)
 (modules unify unify_run)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets unify.ml)
 (deps unify.ml2mk.ml)
 (action
  (run sh -c "%{project_root}/src/noCanren.exe %{deps} -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(executable
 (name GCW_run)
 (package noCanren-tests)
 (public_name noCanren-tests.GCW)
 (libraries GT OCanren OCanren.tester)
 (modules GCW GCW_run)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets GCW.ml)
 (deps GCW.ml2mk.ml)
 (action
  (run sh -c "%{project_root}/src/noCanren.exe %{deps} -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(executable
 (name hanoi2_run)
 (package noCanren-tests)
 (public_name noCanren-tests.hanoi2)
 (libraries GT OCanren OCanren.tester)
 (modules hanoi2 hanoi2_run)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets hanoi2.ml)
 (deps hanoi2.ml2mk.ml)
 (action
  (run sh -c "%{project_root}/src/noCanren.exe %{deps} -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(executable
 (name sudoku4x4_run)
 (package noCanren-tests)
 (public_name noCanren-tests.sudoku4x4)
 (libraries GT OCanren OCanren.tester)
 (modules sudoku4x4 sudoku4x4_run)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx)))

(rule
 (targets sudoku4x4.ml)
 (deps sudoku4x4.ml2mk.ml)
 (action
  (run sh -c "%{project_root}/src/noCanren.exe %{deps} -o %{targets} | ocamlformat --enable-outside-detected-project --impl -")))

(cram (deps ./hm_inferencer_run.exe))
(cram (deps ./scheme_interpreter_run.exe))
(cram (deps ./bottles_run.exe))
(cram (deps ./hanoi_run.exe))
(cram (deps ./bridge_run.exe))
(cram (deps ./einstein_run.exe))
(cram (deps ./unify_run.exe))
(cram (deps ./GCW_run.exe))
(cram (deps ./hanoi2_run.exe))
(cram (deps ./sudoku4x4_run.exe))
